// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider      = "prisma-client-js"
    binaryTargets = ["native"]
    //output        = "./generated/prisma-client-js"
    engineType    = "library"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    email String @unique
    hash  String

    firstName String?
    lastName  String?

    expenses Expense[]

    initialBalance Int @default(2000)
    currentBalance Int @default(2000)

    roles Role[] //UsersOnRoles[]

    @@map("user")
}

// model UsersOnRoles {
//     assignedAt DateTime @default(now())
//     assignedBy String?

//     roleId Int
//     role   Role @relation(fields: [roleId], references: [id])
//     userId Int
//     user   User @relation(fields: [userId], references: [id])

//     @@id([userId, roleId])
//     @@map("users-roles")
// }

model Role {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    name String @unique

    users User[] //UsersOnRoles[]

    @@map("role")
}

model Expense {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    title       String
    description String?
    amount      String
    date        DateTime

    userId Int
    user   User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@map("expense")
}
